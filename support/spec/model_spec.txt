Models

Adventure -- what data needs to be carried across the whole thing
	has_many stages
	belongs_to account
	has_many images

	title
		string
		self-evident
	css
		text
		Adventure-level CSS, will be applied to each page
	set
		text
		initial state, see state_spec
	verify
		text
		only_if that tells what the state is allowed to be like at the end
	description
		text
		Actually a description, for index purposes.
	playcount
		integer
		how many times has the complete button been pushed
	stagecount
		integer
		number of belonging stages
	rating
		float
		average rating, to be implemented
	ratecount
		integer
		number of ratings, TBI
	favorites
		integer
		number of favorites, TBI
	account_id
		integer
		ID of the creating account, TBI
	public
		boolean
		can randoms access the adventure


Stage -- what data is needed to show one page
	belongs_to Adventure
	has_many picks
	has_one stagelayout

	title
		string
		self-evident
	adventure_id
		integer
		Does ruby automatically do this for me?
	stagelayout_id
		integer
		^^
	order
		integer
		what order the stage should be shown in, 1 first, 0 never
	content
		text
		defines pick vars to be stuck in the layout


Pick -- what individual choices can be made
	belongs_to Stage
	belongs_to picklayout

	Pick
		string
		Name should be used for identification in a stagelayout
	title
		string
		Human-readable title, for indexing / ID purposes. CoC assigned to $title (which can be overridden)
	content
		text
		defines variables that go into picklayout. See layout_spec
	only_if
		text
		determines special conditions that must be met for a pick to be chosen. See state_spec
	sets
		text
		Tells how vars should react to this pick being chosen / unchosen. See state_spec
	picklayout_id
		integer
		self-evident
	stage_id
		integer
		self-evident


Picklayout -- how a pick should be laid out
	has_many picks

	html
		text
		Defines a pick. See layout_spec
	title
		string
		What do we call this layout

Stagelayout -- how a stage should be laid out
	has_many stages

	html
		text
		Defines a stage. See layout_spec
	title
		string
		What do we call this layout

Account -- users
	has_many adventures

	name
		string
		account name
	pass_hash
		string
		password hash
	salt
		string
		password salt
	usergroup
		integer
		Dev=0, Admin=1, User=2


Image -- stored images
	belongs_to :adventure

	adventure_id
		integer
		what adventure does it belong to
	image
		attachment
		paperclip handles this
	name
		string
		how do I reference the image
